@using MudBlazor
@inject Fuzzbin.Web.Services.OnboardingService OnboardingService

<MudDialog Class="fz-onboarding-dialog">
    <TitleContent>
        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
            <MudIcon Icon="@Icons.Material.Filled.PlayCircle" Color="Color.Primary" />
            <MudText Typo="Typo.h5">Welcome to Fuzzbin</MudText>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudStepper Elevation="0" Dense="true" Linear="true" ActiveStep="@_activeStep">
            <MudStep Label="Import" Icon="@Icons.Material.Filled.CloudUpload">
                <MudStack Spacing="2">
                    <MudText Typo="Typo.h6">Build your library quickly</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                        Point Fuzzbin at your existing video folders or drop CSV exports to seed the catalog. The import tools deduplicate, enrich metadata, and keep thumbnails in sync automatically.
                    </MudText>
                    <MudAlert Severity="Severity.Info" Variant="Variant.Text">
                        Tip: Use the <strong>Advanced Options</strong> tab during import to map network paths and set default quality tiers.
                    </MudAlert>
                </MudStack>
            </MudStep>
            <MudStep Label="Queue" Icon="@Icons.Material.Filled.QueueMusic">
                <MudStack Spacing="2">
                    <MudText Typo="Typo.h6">Master the live queue</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                        Drag videos to reorder the flow, toggle shuffle and repeat modes from the queue header, and manage playback directly from the mini player. Real-time telemetry keeps duration and remaining time accurate while you mix.
                    </MudText>
                    <MudAlert Severity="Severity.Success" Variant="Variant.Text">
                        Keyboard shortcut <code>Alt+Q</code> jumps straight to the queue so you can react fast during a set.
                    </MudAlert>
                </MudStack>
            </MudStep>
            <MudStep Label="Shortcuts" Icon="@Icons.Material.Filled.Keyboard">
                <MudStack Spacing="2">
                    <MudText Typo="Typo.h6">Stay fast with keyboard control</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                        Press <strong>/</strong> to focus search, <strong>Space</strong> to play or pause, and <strong>Alt + ←/→</strong> to move between queue items. Use <strong>Alt+H</strong> any time to reopen this tour from Settings.
                    </MudText>
                    <MudAlert Severity="Severity.Warning" Variant="Variant.Text">
                        Prefer mouse control? You can disable specific shortcuts in Settings → Accessibility.
                    </MudAlert>
                </MudStack>
            </MudStep>
        </MudStepper>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="Skip">Skip for now</MudButton>
        <MudButton Disabled="_activeStep == 0" Variant="Variant.Outlined" Color="Color.Secondary" OnClick="Previous" StartIcon="@Icons.Material.Filled.ArrowBack">
            Back
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Next" EndIcon="@GetPrimaryIcon()">
            @GetPrimaryLabel()
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance DialogReference { get; set; } = default!;

    private int _activeStep;

    private string GetPrimaryLabel() => _activeStep >= 2 ? "Finish" : "Next";

    private string GetPrimaryIcon() => _activeStep >= 2 ? Icons.Material.Filled.Check : Icons.Material.Filled.ArrowForward;

    private async Task Next()
    {
        if (_activeStep >= 2)
        {
            await OnboardingService.MarkCompletedAsync();
            DialogReference.Close();
            return;
        }

        _activeStep++;
    }

    private void Previous()
    {
        if (_activeStep <= 0)
        {
            return;
        }

        _activeStep--;
    }

    private void Skip()
    {
        DialogReference.Cancel();
    }
}

<style>
    .fz-onboarding-dialog .mud-dialog-content {
        min-width: min(720px, 90vw);
        animation: fz-slide-up 220ms cubic-bezier(0.21, 0.61, 0.35, 1);
    }

    .fz-onboarding-dialog .mud-alert strong {
        font-weight: 600;
    }
</style>
